PROJECT_ROOT = $(dir $(abspath $(lastword $(MAKEFILE_LIST))))

LIB_NAME = imsgsockhdlr
FULL_LIB_NAME_A = lib$(LIB_NAME).a
FULL_LIB_NAME_SO = lib$(LIB_NAME).so

MSG_HDLR_LIB_DIR = ../iway_msg_hdlr

MAIN_PROG1 = LWComConFull
MAIN_PROG2 = DivisibleConsumer
MAIN_PROG3 = DivisibleProducer

TEST_PROG1 = MsgCommHdlrTestSender
TEST_PROG2 = MsgCommHdlrTestReceiver
TEST_PROG3 = LWCCGrammarTest

PROGRAMNAMES = $(MAIN_PROG1) $(MAIN_PROG2) $(MAIN_PROG3)  $(TEST_PROG1) $(TEST_PROG2) $(TEST_PROG3)

## TODO - create library of ThreadedWorker and ThreadMapper, then access that
## from here; add include paths to pick up the headers for those classes

MAIN_PROG1_OBJS = LWComConFull.o MsgCommHdlr.o ThreadedWorker.o ThreadMapper.o
MAIN_PROG2_OBJS = DivisibleConsumer.o MsgCommHdlr.o ThreadedWorker.o ThreadMapper.o
MAIN_PROG3_OBJS = DivisibleProducer.o MsgCommHdlr.o ThreadedWorker.o ThreadMapper.o

TEST_PROG1_OBJS = MsgCommHdlrTestSender.o MsgCommHdlr.o ThreadedWorker.o ThreadMapper.o
TEST_PROG2_OBJS = MsgCommHdlrTestReceiver.o MsgCommHdlr.o ThreadedWorker.o ThreadMapper.o
TEST_PROG3_OBJS = LWCCGrammarTest.o

# Compilers
CC = gcc
CXX = g++


# Compiler Flags: C, C++, and Preprocessor
CFLAGS += -g -O0
CFLAGS += -pthread \
          -I./prodcon_utils \
          -I../iway_msg_hdlr \
          -I../iway_logger \
          -I./ \
          -I/usr/local/include 

CXXFLAGS += $(CFLAGS) -std=c++0x

# OPTIONAL - enable debugging to track internal execution flow
CPPFLAGS += -DDEBUG
CPPFLAGS += -DDEBUG_THREADEDWORKER
CPPFLAGS += -DDEBUG_MSGCOMMHDLR
### CPPFLAGS += -DDEBUG_THREADMAPPER
CPPFLAGS += -DDEBUG_THREADSAFEMSGPTRQUEUE
CPPFLAGS += -DDEBUG_THREADSAFEPTRQUEUE
CPPFLAGS += -DDEBUG_DIVISIBLE
### CPPFLAGS += -DDEBUG_DIVISIBLE_EXTREME
### CPPFLAGS += -DDEBUG_DIVISIBLE_SLOWDOWN_1000
### CPPFLAGS += -DDEBUG_DIVISIBLE_SLOWDOWN_3000
### CPPFLAGS += -DDEBUG_PC_FUNCS_DO_RAND_GEN
### CPPFLAGS += -DDEBUG_PC_FUNCS_DO_COMPILATION

# NOTE the WARNING ...
##### CPPFLAGS += -DDEBUG_THREADEDWORKERTESTER_WARNING___ADDS_LONG_SLEEPS_IN_MSG_QUEUE

# Linker/Loader Flags
PN_LDFLAGS = -L/usr/lib/x86_64-linux-gnu \
             -l pthread \
             -L/usr/local/lib/x86_64-linux-gnu \
             -L$(MSG_HDLR_LIB_DIR) \
             -Wl,-rpath,$(MSG_HDLR_LIB_DIR) \
             -l $(LIB_NAME)

all:	$(PROGRAMNAMES)

$(MAIN_PROG1):	$(MAIN_PROG1_OBJS)
	$(CXX) -o $@ $^ $(PN_LDFLAGS)

$(MAIN_PROG2):	$(MAIN_PROG2_OBJS)
	$(CXX) -o $@ $^ $(PN_LDFLAGS)

$(MAIN_PROG3):	$(MAIN_PROG3_OBJS)
	$(CXX) -o $@ $^ $(PN_LDFLAGS)

$(TEST_PROG1):	$(TEST_PROG1_OBJS)
	$(CXX) -o $@ $^ $(PN_LDFLAGS)

$(TEST_PROG2):	$(TEST_PROG2_OBJS)
	$(CXX) -o $@ $^ $(PN_LDFLAGS)

$(TEST_PROG3):	$(TEST_PROG3_OBJS)
	$(CXX) -o $@ $^ $(PN_LDFLAGS)

%.o:	$(PROJECT_ROOT)%.cpp
	$(CXX) -c $(CXXFLAGS) $(CPPFLAGS) $< -o $@

%.o:	$(PROJECT_ROOT)%.c
	$(CXX) -c $(CFLAGS) $(CPPFLAGS) $< -o $@

clean:
	rm -fr $(PROGRAMNAMES) $(MAIN_PROG1_OBJS) $(MAIN_PROG2_OBJS) $(MAIN_PROG3_OBJS) $(TEST_PROG1_OBJS) $(TEST_PROG2_OBJS) $(TEST_PROG3_OBJS)

